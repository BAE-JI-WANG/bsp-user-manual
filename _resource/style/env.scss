// ````````````````````````````````````````````````````````````````````````````변수
$Font-base-stack: 'Noto Sans KR', 'Apple SD Gothic', sans-serif;
$Font-special-stack: 'Montserrat', 'Noto Sans KR', 'Apple SD Gothic', sans-serif;
$Contents-width: 1280px;
$Contents-min-width: 1200px;
$Break-large: 1400px;
$GlobalMenuHeight: 80px;
$SubMenuHeight: 50px;
$PageTitleHeight: 90px;
$FooterHeight: 34px;
$FooterLogoutHeight: 300px;
$MinHeight: calc(100vh - #{$GlobalMenuHeight} - #{$SubMenuHeight} - #{$FooterHeight});
$StructureElement: 800;


// --------------------------------------------------------------------------------
// ```````````````````````````````````````````````````````````````````````functions


/* String Replace */
@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}


/* rem */
@function rem($pixels, $context: 16) {
	@return #{$pixels/$context}rem;
}

@function em($pixels, $context: 16) {
	@return #{$pixels/$context}em;
}


/* Floor */
@function toCeil($pixels) {
	@return ceil($pixels);
}


// mixin
@mixin transition($args...) {
	transition: $args;
}


// --------------------------------------------------------------------------------
// ```````````````````````````````````````````````````````````````````````````mixin

@mixin transition($args...) {
	transition: $args;
}


/* retina */
@mixin retina {
	@media
		only screen and (-webkit-min-device-pixel-ratio: 2),
		only screen and (min--moz-device-pixel-ratio: 2),
		only screen and (-o-min-device-pixel-ratio: 2/1),
		only screen and (min-device-pixel-ratio: 2),
		only screen and (min-resolution: 192dpi),
		only screen and (min-resolution: 2dppx) {
			@content;
		}
}


/* aspect ratio */
@mixin aspect-ratio($width, $height) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> .inner {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}


// clear
@mixin clearBoth {
	content: ''; display: table; clear: both;
}


@mixin noneTxt {
	overflow:hidden;
	white-space:nowrap;
	text-indent:100%;
}



@mixin respond-to($media) {
	@if $media == medium-screens {
		@media only screen and (max-width: $break-large - 1) { @content; }
	}
	@else if $media == wide-screens {
		@media only screen and (min-width: $break-large) { @content; }
	}
}



/* key frame animation */
@mixin animated {
	animation-duration: 0.3s;
	animation-fill-mode: both;
}

@keyframes fadeIn {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@keyframes fadeIn2 {
	from {
		opacity: 0;
	}

	to {
		opacity: 1;
	}
}

@keyframes alarm {
	from {
		transform: scale(1);
	}
	to {
		transform: scale(2);
	}
}

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
